// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: dish.proto

package dish

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewDish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KitchenId   string   `protobuf:"bytes,1,opt,name=kitchen_id,json=kitchenId,proto3" json:"kitchen_id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Category    string   `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Ingredients []string `protobuf:"bytes,6,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Available   bool     `protobuf:"varint,7,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *NewDish) Reset() {
	*x = NewDish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dish_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewDish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewDish) ProtoMessage() {}

func (x *NewDish) ProtoReflect() protoreflect.Message {
	mi := &file_dish_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewDish.ProtoReflect.Descriptor instead.
func (*NewDish) Descriptor() ([]byte, []int) {
	return file_dish_proto_rawDescGZIP(), []int{0}
}

func (x *NewDish) GetKitchenId() string {
	if x != nil {
		return x.KitchenId
	}
	return ""
}

func (x *NewDish) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewDish) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewDish) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *NewDish) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *NewDish) GetIngredients() []string {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *NewDish) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type NewDishResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	KitchenId   string   `protobuf:"bytes,2,opt,name=kitchen_id,json=kitchenId,proto3" json:"kitchen_id,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32  `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
	Category    string   `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	Ingredients []string `protobuf:"bytes,7,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Available   bool     `protobuf:"varint,8,opt,name=available,proto3" json:"available,omitempty"`
	CreatedAt   string   `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *NewDishResp) Reset() {
	*x = NewDishResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dish_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewDishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewDishResp) ProtoMessage() {}

func (x *NewDishResp) ProtoReflect() protoreflect.Message {
	mi := &file_dish_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewDishResp.ProtoReflect.Descriptor instead.
func (*NewDishResp) Descriptor() ([]byte, []int) {
	return file_dish_proto_rawDescGZIP(), []int{1}
}

func (x *NewDishResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NewDishResp) GetKitchenId() string {
	if x != nil {
		return x.KitchenId
	}
	return ""
}

func (x *NewDishResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewDishResp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewDishResp) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *NewDishResp) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *NewDishResp) GetIngredients() []string {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *NewDishResp) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *NewDishResp) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dish_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_dish_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_dish_proto_rawDescGZIP(), []int{2}
}

func (x *ID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DishInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	KitchenId     string   `protobuf:"bytes,2,opt,name=kitchen_id,json=kitchenId,proto3" json:"kitchen_id,omitempty"`
	Name          string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Price         float32  `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
	Category      string   `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	Ingredients   []string `protobuf:"bytes,7,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Allergens     []string `protobuf:"bytes,8,rep,name=allergens,proto3" json:"allergens,omitempty"`
	NutritionInfo []string `protobuf:"bytes,9,rep,name=nutrition_info,json=nutritionInfo,proto3" json:"nutrition_info,omitempty"`
	DietaryInfo   []string `protobuf:"bytes,10,rep,name=dietary_info,json=dietaryInfo,proto3" json:"dietary_info,omitempty"`
	Available     bool     `protobuf:"varint,11,opt,name=available,proto3" json:"available,omitempty"`
	CreatedAt     string   `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string   `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *DishInfo) Reset() {
	*x = DishInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dish_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishInfo) ProtoMessage() {}

func (x *DishInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dish_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishInfo.ProtoReflect.Descriptor instead.
func (*DishInfo) Descriptor() ([]byte, []int) {
	return file_dish_proto_rawDescGZIP(), []int{3}
}

func (x *DishInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DishInfo) GetKitchenId() string {
	if x != nil {
		return x.KitchenId
	}
	return ""
}

func (x *DishInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DishInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DishInfo) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DishInfo) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DishInfo) GetIngredients() []string {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *DishInfo) GetAllergens() []string {
	if x != nil {
		return x.Allergens
	}
	return nil
}

func (x *DishInfo) GetNutritionInfo() []string {
	if x != nil {
		return x.NutritionInfo
	}
	return nil
}

func (x *DishInfo) GetDietaryInfo() []string {
	if x != nil {
		return x.DietaryInfo
	}
	return nil
}

func (x *DishInfo) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *DishInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DishInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type NewData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price     float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	Available bool    `protobuf:"varint,4,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *NewData) Reset() {
	*x = NewData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dish_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewData) ProtoMessage() {}

func (x *NewData) ProtoReflect() protoreflect.Message {
	mi := &file_dish_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewData.ProtoReflect.Descriptor instead.
func (*NewData) Descriptor() ([]byte, []int) {
	return file_dish_proto_rawDescGZIP(), []int{4}
}

func (x *NewData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NewData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewData) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *NewData) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type NewDataNoID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price     float32 `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	Available bool    `protobuf:"varint,3,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *NewDataNoID) Reset() {
	*x = NewDataNoID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dish_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewDataNoID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewDataNoID) ProtoMessage() {}

func (x *NewDataNoID) ProtoReflect() protoreflect.Message {
	mi := &file_dish_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewDataNoID.ProtoReflect.Descriptor instead.
func (*NewDataNoID) Descriptor() ([]byte, []int) {
	return file_dish_proto_rawDescGZIP(), []int{5}
}

func (x *NewDataNoID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewDataNoID) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *NewDataNoID) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type UpdatedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	KitchenId   string   `protobuf:"bytes,2,opt,name=kitchen_id,json=kitchenId,proto3" json:"kitchen_id,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32  `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
	Category    string   `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	Ingredients []string `protobuf:"bytes,7,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Available   bool     `protobuf:"varint,8,opt,name=available,proto3" json:"available,omitempty"`
	UpdatedAt   string   `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UpdatedData) Reset() {
	*x = UpdatedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dish_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedData) ProtoMessage() {}

func (x *UpdatedData) ProtoReflect() protoreflect.Message {
	mi := &file_dish_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedData.ProtoReflect.Descriptor instead.
func (*UpdatedData) Descriptor() ([]byte, []int) {
	return file_dish_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatedData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatedData) GetKitchenId() string {
	if x != nil {
		return x.KitchenId
	}
	return ""
}

func (x *UpdatedData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatedData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatedData) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdatedData) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UpdatedData) GetIngredients() []string {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *UpdatedData) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *UpdatedData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Void struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Void) Reset() {
	*x = Void{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dish_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Void) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Void) ProtoMessage() {}

func (x *Void) ProtoReflect() protoreflect.Message {
	mi := &file_dish_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Void.ProtoReflect.Descriptor instead.
func (*Void) Descriptor() ([]byte, []int) {
	return file_dish_proto_rawDescGZIP(), []int{7}
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dish_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_dish_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_dish_proto_rawDescGZIP(), []int{8}
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DishDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price     float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	Category  string  `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Available bool    `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *DishDetails) Reset() {
	*x = DishDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dish_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishDetails) ProtoMessage() {}

func (x *DishDetails) ProtoReflect() protoreflect.Message {
	mi := &file_dish_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishDetails.ProtoReflect.Descriptor instead.
func (*DishDetails) Descriptor() ([]byte, []int) {
	return file_dish_proto_rawDescGZIP(), []int{9}
}

func (x *DishDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DishDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DishDetails) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DishDetails) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DishDetails) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type Dishes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dishes []*DishDetails `protobuf:"bytes,1,rep,name=dishes,proto3" json:"dishes,omitempty"`
	Total  int32          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page   int32          `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int32          `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Dishes) Reset() {
	*x = Dishes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dish_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dishes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dishes) ProtoMessage() {}

func (x *Dishes) ProtoReflect() protoreflect.Message {
	mi := &file_dish_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dishes.ProtoReflect.Descriptor instead.
func (*Dishes) Descriptor() ([]byte, []int) {
	return file_dish_proto_rawDescGZIP(), []int{10}
}

func (x *Dishes) GetDishes() []*DishDetails {
	if x != nil {
		return x.Dishes
	}
	return nil
}

func (x *Dishes) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Dishes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Dishes) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

var File_dish_proto protoreflect.FileDescriptor

var file_dish_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x69, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x69,
	0x73, 0x68, 0x22, 0xd0, 0x01, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x44, 0x69, 0x73, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x44, 0x69, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74, 0x63, 0x68,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x14, 0x0a, 0x02, 0x49,
	0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x87, 0x03, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x67, 0x65, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x67, 0x65, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x61, 0x0a, 0x07, 0x4e,
	0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x55,
	0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74, 0x63, 0x68,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x06, 0x0a, 0x04, 0x56,
	0x6f, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x81, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x22, 0x73, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x12, 0x29, 0x0a,
	0x06, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x64, 0x69, 0x73, 0x68, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x06, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x32, 0xc6, 0x01, 0x0a, 0x04, 0x44, 0x69, 0x73,
	0x68, 0x12, 0x27, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x0d, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x2e,
	0x4e, 0x65, 0x77, 0x44, 0x69, 0x73, 0x68, 0x1a, 0x11, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x2e, 0x4e,
	0x65, 0x77, 0x44, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x08, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x2e, 0x49, 0x44, 0x1a, 0x0e, 0x2e, 0x64,
	0x69, 0x73, 0x68, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x2e, 0x4e, 0x65,
	0x77, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x11, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x08, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x2e, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x64,
	0x69, 0x73, 0x68, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x12, 0x10, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x0c, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x65,
	0x73, 0x42, 0x0f, 0x5a, 0x0d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69,
	0x73, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dish_proto_rawDescOnce sync.Once
	file_dish_proto_rawDescData = file_dish_proto_rawDesc
)

func file_dish_proto_rawDescGZIP() []byte {
	file_dish_proto_rawDescOnce.Do(func() {
		file_dish_proto_rawDescData = protoimpl.X.CompressGZIP(file_dish_proto_rawDescData)
	})
	return file_dish_proto_rawDescData
}

var file_dish_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_dish_proto_goTypes = []interface{}{
	(*NewDish)(nil),     // 0: dish.NewDish
	(*NewDishResp)(nil), // 1: dish.NewDishResp
	(*ID)(nil),          // 2: dish.ID
	(*DishInfo)(nil),    // 3: dish.DishInfo
	(*NewData)(nil),     // 4: dish.NewData
	(*NewDataNoID)(nil), // 5: dish.NewDataNoID
	(*UpdatedData)(nil), // 6: dish.UpdatedData
	(*Void)(nil),        // 7: dish.Void
	(*Pagination)(nil),  // 8: dish.Pagination
	(*DishDetails)(nil), // 9: dish.DishDetails
	(*Dishes)(nil),      // 10: dish.Dishes
}
var file_dish_proto_depIdxs = []int32{
	9,  // 0: dish.Dishes.dishes:type_name -> dish.DishDetails
	0,  // 1: dish.Dish.Add:input_type -> dish.NewDish
	2,  // 2: dish.Dish.Read:input_type -> dish.ID
	4,  // 3: dish.Dish.Update:input_type -> dish.NewData
	2,  // 4: dish.Dish.Delete:input_type -> dish.ID
	8,  // 5: dish.Dish.Fetch:input_type -> dish.Pagination
	1,  // 6: dish.Dish.Add:output_type -> dish.NewDishResp
	3,  // 7: dish.Dish.Read:output_type -> dish.DishInfo
	6,  // 8: dish.Dish.Update:output_type -> dish.UpdatedData
	7,  // 9: dish.Dish.Delete:output_type -> dish.Void
	10, // 10: dish.Dish.Fetch:output_type -> dish.Dishes
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_dish_proto_init() }
func file_dish_proto_init() {
	if File_dish_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dish_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewDish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dish_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewDishResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dish_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dish_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dish_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dish_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewDataNoID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dish_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dish_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Void); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dish_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dish_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dish_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dishes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dish_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dish_proto_goTypes,
		DependencyIndexes: file_dish_proto_depIdxs,
		MessageInfos:      file_dish_proto_msgTypes,
	}.Build()
	File_dish_proto = out.File
	file_dish_proto_rawDesc = nil
	file_dish_proto_goTypes = nil
	file_dish_proto_depIdxs = nil
}
