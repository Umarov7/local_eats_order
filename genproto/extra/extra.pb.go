// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: extra.proto

package extra

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Period struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *Period) Reset() {
	*x = Period{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Period) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Period) ProtoMessage() {}

func (x *Period) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Period.ProtoReflect.Descriptor instead.
func (*Period) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{0}
}

func (x *Period) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Period) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Period) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type Dish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OrdersCount int32   `protobuf:"varint,3,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
	Revenue     float32 `protobuf:"fixed32,4,opt,name=revenue,proto3" json:"revenue,omitempty"`
}

func (x *Dish) Reset() {
	*x = Dish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dish) ProtoMessage() {}

func (x *Dish) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dish.ProtoReflect.Descriptor instead.
func (*Dish) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{1}
}

func (x *Dish) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Dish) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dish) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

func (x *Dish) GetRevenue() float32 {
	if x != nil {
		return x.Revenue
	}
	return 0
}

type DishNoID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OrdersCount int32   `protobuf:"varint,2,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
	Revenue     float32 `protobuf:"fixed32,3,opt,name=revenue,proto3" json:"revenue,omitempty"`
}

func (x *DishNoID) Reset() {
	*x = DishNoID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishNoID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishNoID) ProtoMessage() {}

func (x *DishNoID) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishNoID.ProtoReflect.Descriptor instead.
func (*DishNoID) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{2}
}

func (x *DishNoID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DishNoID) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

func (x *DishNoID) GetRevenue() float32 {
	if x != nil {
		return x.Revenue
	}
	return 0
}

type OrderPerHour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hour        int32 `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	OrdersCount int32 `protobuf:"varint,2,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
}

func (x *OrderPerHour) Reset() {
	*x = OrderPerHour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPerHour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPerHour) ProtoMessage() {}

func (x *OrderPerHour) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPerHour.ProtoReflect.Descriptor instead.
func (*OrderPerHour) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{3}
}

func (x *OrderPerHour) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *OrderPerHour) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

type Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalOrders   int32           `protobuf:"varint,1,opt,name=total_orders,json=totalOrders,proto3" json:"total_orders,omitempty"`
	TotalRevenue  float32         `protobuf:"fixed32,2,opt,name=total_revenue,json=totalRevenue,proto3" json:"total_revenue,omitempty"`
	AverageRating float32         `protobuf:"fixed32,3,opt,name=average_rating,json=averageRating,proto3" json:"average_rating,omitempty"`
	TopDishes     []*Dish         `protobuf:"bytes,4,rep,name=top_dishes,json=topDishes,proto3" json:"top_dishes,omitempty"`
	BusiestHours  []*OrderPerHour `protobuf:"bytes,5,rep,name=busiest_hours,json=busiestHours,proto3" json:"busiest_hours,omitempty"`
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{4}
}

func (x *Statistics) GetTotalOrders() int32 {
	if x != nil {
		return x.TotalOrders
	}
	return 0
}

func (x *Statistics) GetTotalRevenue() float32 {
	if x != nil {
		return x.TotalRevenue
	}
	return 0
}

func (x *Statistics) GetAverageRating() float32 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *Statistics) GetTopDishes() []*Dish {
	if x != nil {
		return x.TopDishes
	}
	return nil
}

func (x *Statistics) GetBusiestHours() []*OrderPerHour {
	if x != nil {
		return x.BusiestHours
	}
	return nil
}

type Cuisine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CuisineType string `protobuf:"bytes,1,opt,name=cuisine_type,json=cuisineType,proto3" json:"cuisine_type,omitempty"`
	OrdersCount int32  `protobuf:"varint,2,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
}

func (x *Cuisine) Reset() {
	*x = Cuisine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cuisine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cuisine) ProtoMessage() {}

func (x *Cuisine) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cuisine.ProtoReflect.Descriptor instead.
func (*Cuisine) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{5}
}

func (x *Cuisine) GetCuisineType() string {
	if x != nil {
		return x.CuisineType
	}
	return ""
}

func (x *Cuisine) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

type Kitchen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OrdersCount int32  `protobuf:"varint,3,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
}

func (x *Kitchen) Reset() {
	*x = Kitchen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kitchen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kitchen) ProtoMessage() {}

func (x *Kitchen) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kitchen.ProtoReflect.Descriptor instead.
func (*Kitchen) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{6}
}

func (x *Kitchen) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Kitchen) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Kitchen) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

type KitchenNoID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OrdersCount int32  `protobuf:"varint,2,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
}

func (x *KitchenNoID) Reset() {
	*x = KitchenNoID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KitchenNoID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KitchenNoID) ProtoMessage() {}

func (x *KitchenNoID) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KitchenNoID.ProtoReflect.Descriptor instead.
func (*KitchenNoID) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{7}
}

func (x *KitchenNoID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KitchenNoID) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalOrders      int32      `protobuf:"varint,1,opt,name=total_orders,json=totalOrders,proto3" json:"total_orders,omitempty"`
	TotalSpent       float32    `protobuf:"fixed32,2,opt,name=total_spent,json=totalSpent,proto3" json:"total_spent,omitempty"`
	FavoriteCuisines []*Cuisine `protobuf:"bytes,3,rep,name=favorite_cuisines,json=favoriteCuisines,proto3" json:"favorite_cuisines,omitempty"`
	FavoriteKitchens []*Kitchen `protobuf:"bytes,4,rep,name=favorite_kitchens,json=favoriteKitchens,proto3" json:"favorite_kitchens,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{8}
}

func (x *Activity) GetTotalOrders() int32 {
	if x != nil {
		return x.TotalOrders
	}
	return 0
}

func (x *Activity) GetTotalSpent() float32 {
	if x != nil {
		return x.TotalSpent
	}
	return 0
}

func (x *Activity) GetFavoriteCuisines() []*Cuisine {
	if x != nil {
		return x.FavoriteCuisines
	}
	return nil
}

func (x *Activity) GetFavoriteKitchens() []*Kitchen {
	if x != nil {
		return x.FavoriteKitchens
	}
	return nil
}

type DaySchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open  string `protobuf:"bytes,1,opt,name=open,proto3" json:"open,omitempty"`
	Close string `protobuf:"bytes,2,opt,name=close,proto3" json:"close,omitempty"`
}

func (x *DaySchedule) Reset() {
	*x = DaySchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaySchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaySchedule) ProtoMessage() {}

func (x *DaySchedule) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaySchedule.ProtoReflect.Descriptor instead.
func (*DaySchedule) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{9}
}

func (x *DaySchedule) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *DaySchedule) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

type WorkingHours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KitchenId string                  `protobuf:"bytes,1,opt,name=kitchen_id,json=kitchenId,proto3" json:"kitchen_id,omitempty"`
	Schedule  map[string]*DaySchedule `protobuf:"bytes,2,rep,name=schedule,proto3" json:"schedule,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WorkingHours) Reset() {
	*x = WorkingHours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingHours) ProtoMessage() {}

func (x *WorkingHours) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingHours.ProtoReflect.Descriptor instead.
func (*WorkingHours) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{10}
}

func (x *WorkingHours) GetKitchenId() string {
	if x != nil {
		return x.KitchenId
	}
	return ""
}

func (x *WorkingHours) GetSchedule() map[string]*DaySchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type WorkingHoursNoID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule map[string]*DaySchedule `protobuf:"bytes,1,rep,name=schedule,proto3" json:"schedule,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WorkingHoursNoID) Reset() {
	*x = WorkingHoursNoID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingHoursNoID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingHoursNoID) ProtoMessage() {}

func (x *WorkingHoursNoID) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingHoursNoID.ProtoReflect.Descriptor instead.
func (*WorkingHoursNoID) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{11}
}

func (x *WorkingHoursNoID) GetSchedule() map[string]*DaySchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type WorkingHoursResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KitchenId string                  `protobuf:"bytes,1,opt,name=kitchen_id,json=kitchenId,proto3" json:"kitchen_id,omitempty"`
	Schedule  map[string]*DaySchedule `protobuf:"bytes,2,rep,name=schedule,proto3" json:"schedule,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UpdatedAt string                  `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *WorkingHoursResp) Reset() {
	*x = WorkingHoursResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingHoursResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingHoursResp) ProtoMessage() {}

func (x *WorkingHoursResp) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingHoursResp.ProtoReflect.Descriptor instead.
func (*WorkingHoursResp) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{12}
}

func (x *WorkingHoursResp) GetKitchenId() string {
	if x != nil {
		return x.KitchenId
	}
	return ""
}

func (x *WorkingHoursResp) GetSchedule() map[string]*DaySchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *WorkingHoursResp) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{13}
}

func (x *ID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type NutritionalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allergens   []string `protobuf:"bytes,1,rep,name=allergens,proto3" json:"allergens,omitempty"`
	Calories    int32    `protobuf:"varint,2,opt,name=calories,proto3" json:"calories,omitempty"`
	Protein     int32    `protobuf:"varint,3,opt,name=protein,proto3" json:"protein,omitempty"`
	Fat         int32    `protobuf:"varint,4,opt,name=fat,proto3" json:"fat,omitempty"`
	Carbs       int32    `protobuf:"varint,5,opt,name=carbs,proto3" json:"carbs,omitempty"`
	DietaryInfo []string `protobuf:"bytes,6,rep,name=dietary_info,json=dietaryInfo,proto3" json:"dietary_info,omitempty"`
}

func (x *NutritionalInfo) Reset() {
	*x = NutritionalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extra_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NutritionalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NutritionalInfo) ProtoMessage() {}

func (x *NutritionalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_extra_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NutritionalInfo.ProtoReflect.Descriptor instead.
func (*NutritionalInfo) Descriptor() ([]byte, []int) {
	return file_extra_proto_rawDescGZIP(), []int{14}
}

func (x *NutritionalInfo) GetAllergens() []string {
	if x != nil {
		return x.Allergens
	}
	return nil
}

func (x *NutritionalInfo) GetCalories() int32 {
	if x != nil {
		return x.Calories
	}
	return 0
}

func (x *NutritionalInfo) GetProtein() int32 {
	if x != nil {
		return x.Protein
	}
	return 0
}

func (x *NutritionalInfo) GetFat() int32 {
	if x != nil {
		return x.Fat
	}
	return 0
}

func (x *NutritionalInfo) GetCarbs() int32 {
	if x != nil {
		return x.Carbs
	}
	return 0
}

func (x *NutritionalInfo) GetDietaryInfo() []string {
	if x != nil {
		return x.DietaryInfo
	}
	return nil
}

var File_extra_proto protoreflect.FileDescriptor

var file_extra_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x22, 0x52, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x67, 0x0a, 0x04, 0x44, 0x69, 0x73, 0x68,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x22, 0x5b, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x68, 0x4e, 0x6f, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x22, 0x45,
	0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x65, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x6f,
	0x75, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x68, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x44, 0x69, 0x73, 0x68, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x12,
	0x38, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x65, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x52, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x65, 0x73, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x4f, 0x0a, 0x07, 0x43, 0x75, 0x69,
	0x73, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x69, 0x73,
	0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x07, 0x4b, 0x69,
	0x74, 0x63, 0x68, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x0b,
	0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x4e, 0x6f, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70,
	0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x11, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f,
	0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x10,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x12, 0x3b, 0x0a, 0x11, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x69, 0x74,
	0x63, 0x68, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x2e, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x52, 0x10, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x73, 0x22, 0x37, 0x0a,
	0x0b, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x74, 0x63, 0x68,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74,
	0x63, 0x68, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x4f, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa6, 0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4e, 0x6f, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x4e, 0x6f, 0x49, 0x44, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x4f,
	0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xe4, 0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65,
	0x6e, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x4f, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb0, 0x01, 0x0a,
	0x0f, 0x4e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x74, 0x65, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x66, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x62, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x61, 0x72, 0x62, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0xdf, 0x01, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x31, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x0d, 0x2e, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x1a, 0x11, 0x2e, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x2f, 0x0a, 0x0d,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0d, 0x2e,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x1a, 0x0f, 0x2e, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x3f, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x12, 0x13, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x1a, 0x17, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09,
	0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x2e, 0x4e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x10, 0x5a, 0x0e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_extra_proto_rawDescOnce sync.Once
	file_extra_proto_rawDescData = file_extra_proto_rawDesc
)

func file_extra_proto_rawDescGZIP() []byte {
	file_extra_proto_rawDescOnce.Do(func() {
		file_extra_proto_rawDescData = protoimpl.X.CompressGZIP(file_extra_proto_rawDescData)
	})
	return file_extra_proto_rawDescData
}

var file_extra_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_extra_proto_goTypes = []interface{}{
	(*Period)(nil),           // 0: extra.Period
	(*Dish)(nil),             // 1: extra.Dish
	(*DishNoID)(nil),         // 2: extra.DishNoID
	(*OrderPerHour)(nil),     // 3: extra.OrderPerHour
	(*Statistics)(nil),       // 4: extra.Statistics
	(*Cuisine)(nil),          // 5: extra.Cuisine
	(*Kitchen)(nil),          // 6: extra.Kitchen
	(*KitchenNoID)(nil),      // 7: extra.KitchenNoID
	(*Activity)(nil),         // 8: extra.Activity
	(*DaySchedule)(nil),      // 9: extra.DaySchedule
	(*WorkingHours)(nil),     // 10: extra.WorkingHours
	(*WorkingHoursNoID)(nil), // 11: extra.WorkingHoursNoID
	(*WorkingHoursResp)(nil), // 12: extra.WorkingHoursResp
	(*ID)(nil),               // 13: extra.ID
	(*NutritionalInfo)(nil),  // 14: extra.NutritionalInfo
	nil,                      // 15: extra.WorkingHours.ScheduleEntry
	nil,                      // 16: extra.WorkingHoursNoID.ScheduleEntry
	nil,                      // 17: extra.WorkingHoursResp.ScheduleEntry
}
var file_extra_proto_depIdxs = []int32{
	1,  // 0: extra.Statistics.top_dishes:type_name -> extra.Dish
	3,  // 1: extra.Statistics.busiest_hours:type_name -> extra.OrderPerHour
	5,  // 2: extra.Activity.favorite_cuisines:type_name -> extra.Cuisine
	6,  // 3: extra.Activity.favorite_kitchens:type_name -> extra.Kitchen
	15, // 4: extra.WorkingHours.schedule:type_name -> extra.WorkingHours.ScheduleEntry
	16, // 5: extra.WorkingHoursNoID.schedule:type_name -> extra.WorkingHoursNoID.ScheduleEntry
	17, // 6: extra.WorkingHoursResp.schedule:type_name -> extra.WorkingHoursResp.ScheduleEntry
	9,  // 7: extra.WorkingHours.ScheduleEntry.value:type_name -> extra.DaySchedule
	9,  // 8: extra.WorkingHoursNoID.ScheduleEntry.value:type_name -> extra.DaySchedule
	9,  // 9: extra.WorkingHoursResp.ScheduleEntry.value:type_name -> extra.DaySchedule
	0,  // 10: extra.Extra.GetStatistics:input_type -> extra.Period
	0,  // 11: extra.Extra.TrackActivity:input_type -> extra.Period
	10, // 12: extra.Extra.SetWorkingHours:input_type -> extra.WorkingHours
	13, // 13: extra.Extra.GetNutrition:input_type -> extra.ID
	4,  // 14: extra.Extra.GetStatistics:output_type -> extra.Statistics
	8,  // 15: extra.Extra.TrackActivity:output_type -> extra.Activity
	12, // 16: extra.Extra.SetWorkingHours:output_type -> extra.WorkingHoursResp
	14, // 17: extra.Extra.GetNutrition:output_type -> extra.NutritionalInfo
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_extra_proto_init() }
func file_extra_proto_init() {
	if File_extra_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_extra_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Period); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishNoID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPerHour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cuisine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kitchen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KitchenNoID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaySchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingHours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingHoursNoID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingHoursResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extra_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NutritionalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_extra_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_extra_proto_goTypes,
		DependencyIndexes: file_extra_proto_depIdxs,
		MessageInfos:      file_extra_proto_msgTypes,
	}.Build()
	File_extra_proto = out.File
	file_extra_proto_rawDesc = nil
	file_extra_proto_goTypes = nil
	file_extra_proto_depIdxs = nil
}
